plugins {
    id 'java-library'
    id 'application'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // From Gradle's init template (version catalog)
    api libs.commons.math3
    implementation libs.guava

    // JUnit 5
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    // You can switch to another demo/main later if you want
    mainClass = 'sim.core.BenchMain'
}

test {
    useJUnitPlatform()

    // Optional tag filter: ./gradlew :lib:test -PincludeTags=bench
    if (project.hasProperty('includeTags')) {
        systemProperty 'junit.jupiter.tags', project.property('includeTags')
    }

    testLogging {
        events "passed", "skipped", "failed", "standardOut"
        showStandardStreams = true
    }
}

// --- Demo tasks to render diagrams and auto-open PNGs ---
tasks.register('logicDot', JavaExec) {
    group = 'demo'
    description = 'Generate logic.png via GraphvizDemo'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'sim.demo.GraphvizDemo'
}

tasks.register('faDot', JavaExec) {
    group = 'demo'
    description = 'Generate fa.png via GraphvizFADemo'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'sim.demo.GraphvizFADemo'
}

tasks.register('dotAll') {
    group = 'demo'
    description = 'Generate both logic and full-adder Graphviz images'
    dependsOn 'logicDot', 'faDot'
}
